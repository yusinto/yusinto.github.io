{"componentChunkName":"component---src-pages-post-template-js","path":"/relay-modern-persisted-queries","result":{"data":{"site":{"siteMetadata":{"blurb":"Frontend Engineer @ LaunchDarkly. Book addict and tea lover. Passionate about react graphql and making things simple and fast."}},"markdownRemark":{"html":"<p>This blog is about <a href=\"https://github.com/yusinto/relay-compiler-plus\" target=\"_blank\" rel=\"nofollow\">relay-compiler-plus</a>,\na custom relay compiler which supports persisted queries.</p>\n<p>One of the more exciting features of relay modern is the ability to use persisted queries with the graphql server.\nInstead of sending the full graphql query in the request payload, you send a short query id which gets mapped\non the server side to the full query. It's a no-brainer for performance. I upgraded from classic for this! </p>\n<p>Alas, the official <a href=\"https://facebook.github.io/relay/docs/new-in-relay-modern.html\" target=\"_blank\" rel=\"nofollow\">documentation</a>\nonly briefly mentioned this without anything else. A quick google search reveals a solution from\n<a href=\"https://medium.com/@wonderboymusic/upgrading-to-relay-modern-or-apollo-ffa58d3a5d59\" target=\"_blank\" rel=\"nofollow\">Scott Taylor</a>\nfrom the New York Times. However his solution generates query ids at runtime at the network fetch level which is not\noptimal. I want a solution where the query ids and the query map file are both generated at compile time for maximum\nperformance.</p>\n<p>It turns out, the original relay-compiler does have a hidden feature to support persisted queries.  </p>\n<p>This package is inspired by a conversation with <a href=\"https://github.com/leebyron\" target=\"_blank\" rel=\"nofollow\">Lee Byron</a>\nat <a href=\"https://summit.graphql.com/\" target=\"_blank\" rel=\"nofollow\">Graphql Summit 2017</a>.</p>\n<h2 id=\"the-key\"><a href=\"#the-key\" aria-label=\"the key permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>The key</h2>\n<p>The key lies in <a href=\"https://github.com/facebook/relay/blob/master/packages/relay-compiler/codegen/RelayFileWriter.js\" target=\"_blank\" rel=\"nofollow\">RelayFileWriter</a>.\nIt accepts a config object where you can specify a persistQuery function. You can dig around and peruse\nthat code at your leisure (which I did). The end result is a modification to the relay-compiler which\naccepts a persistQuery function which gets passed down to RelayFileWriter. I call it\n<a href=\"https://github.com/yusinto/relay-compiler-plus\" target=\"_blank\" rel=\"nofollow\">relay-compiler-plus</a>. </p>\n<h2 id=\"step-1-install\"><a href=\"#step-1-install\" aria-label=\"step 1 install permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Step 1: Install</h2>\n<p>Install relay-compiler-plus and the latest <a href=\"https://github.com/graphql/graphql-js\" target=\"_blank\" rel=\"nofollow\">graphql-js</a> package:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-bash line-numbers\"><code class=\"language-bash\"><span class=\"token function\">yarn</span> <span class=\"token function\">add</span> relay-compiler-plus</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-bash line-numbers\"><code class=\"language-bash\"><span class=\"token function\">yarn</span> upgrade graphql --latest</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<h2 id=\"step-2-compile\"><a href=\"#step-2-compile\" aria-label=\"step 2 compile permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Step 2: Compile</h2>\n<p>Add this npm command to your <strong>package.json</strong>:</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-json line-numbers\"><code class=\"language-json\"><span class=\"token property\">\"scripts\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"rcp\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"relay-compiler-plus --schema &lt;SCHEMA_FILE_PATH> --src &lt;SRC_DIR_PATH> -f\"</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span></span></pre></div>\n<p>where:<br/>\n<em>SCHEMA_FILE_PATH</em> is the path to your schema.graphql or schema.json file<br/>\n<em>SRC_DIR_PATH</em> is the path to your src directory<br/>\n<em>-f</em> will delete all **/__generated__/*.graphql.js files under <em>SRC_DIR_PATH</em> before compilation starts.<br/></p>\n<p>Run the command to start compiling:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-bash line-numbers\"><code class=\"language-bash\"><span class=\"token function\">npm</span> run <span class=\"token function\">rcp</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<h2 id=\"step-3-map-query-ids-on-the-server\"><a href=\"#step-3-map-query-ids-on-the-server\" aria-label=\"step 3 map query ids on the server permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Step 3: Map query ids on the server</h2>\n<p>On the server, use <em>matchQueryMiddleware</em> prior to <em>express-graphql</em> to match query ids to actual queries. Note\nthat <em>queryMap.json</em> is auto-generated by <em>relay-compiler-plus</em> in the previous step.</p>\n<div class=\"gatsby-highlight has-highlighted-lines\" data-language=\"jsx\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-jsx line-numbers\"><code class=\"language-jsx\"><span class=\"token keyword\">import</span> Express <span class=\"token keyword\">from</span> <span class=\"token string\">'express'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> expressGraphl <span class=\"token keyword\">from</span> <span class=\"token string\">'express-graphql'</span><span class=\"token punctuation\">;</span>\n<span class=\"gatsby-highlight-code-line\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span>matchQueryMiddleware<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'relay-compiler-plus'</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// do this</span></span><span class=\"gatsby-highlight-code-line\"><span class=\"token keyword\">import</span> queryMapJson <span class=\"token keyword\">from</span> <span class=\"token string\">'../queryMap.json'</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// do this</span></span>\n<span class=\"token keyword\">const</span> app <span class=\"token operator\">=</span> <span class=\"token function\">Express</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\napp<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/graphql'</span><span class=\"token punctuation\">,</span>\n<span class=\"gatsby-highlight-code-line\">  <span class=\"token function\">matchQueryMiddleware</span><span class=\"token punctuation\">(</span>queryMapJson<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// do this</span></span>  <span class=\"token function\">expressGraphl</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    schema<span class=\"token punctuation\">:</span> graphqlSchema<span class=\"token punctuation\">,</span>\n    graphiql<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h2 id=\"step-4-send-query-ids-on-the-client\"><a href=\"#step-4-send-query-ids-on-the-client\" aria-label=\"step 4 send query ids on the client permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Step 4: Send query ids on the client</h2>\n<p>On the client, modify your relay network fetch implementation to pass a queryId parameter in the\nrequest body instead of a query parameter. Note that operation.id is generated by relay-compiler-plus in step 2.</p>\n<div class=\"gatsby-highlight has-highlighted-lines\" data-language=\"jsx\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-jsx line-numbers\"><code class=\"language-jsx\"><span class=\"token keyword\">function</span> <span class=\"token function\">fetchQuery</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">operation<span class=\"token punctuation\">,</span> variables<span class=\"token punctuation\">,</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/graphql'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n    method<span class=\"token punctuation\">:</span> <span class=\"token string\">'POST'</span><span class=\"token punctuation\">,</span>\n    headers<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token string\">'content-type'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'application/json'</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    body<span class=\"token punctuation\">:</span> <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">      queryId<span class=\"token punctuation\">:</span> operation<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">,</span> <span class=\"token comment\">// do this</span></span>      variables<span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">response</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> response<span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h2 id=\"bonus\"><a href=\"#bonus\" aria-label=\"bonus permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Bonus</h2>\n<p>In <a href=\"#step-2-compile\">step 2</a>, running relay-compiler-plus generates relay query files like the original relay-compiler,\nbut with a difference. Inspect a generated ConcreteBatch query file and you'll see that it now has an id assigned\nto it and that the query text is now null:</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-jsx line-numbers\"><code class=\"language-jsx\"><span class=\"token keyword\">const</span> batch <span class=\"token comment\">/*: ConcreteBatch*/</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token string\">\"fragment\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token string\">\"argumentDefinitions\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"kind\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"Fragment\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"metadata\"</span><span class=\"token punctuation\">:</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"name\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"client_index_Query\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"selections\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token operator\">...</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"type\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"Query\"</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">\"id\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"6082095e8a45f64d38924775d047cf8c\"</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// look ma, query id!</span>\n  <span class=\"token string\">\"kind\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"Batch\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">\"metadata\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">\"name\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"client_index_Query\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">\"query\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span><span class=\"token operator\">...</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">\"text\"</span><span class=\"token punctuation\">:</span> <span class=\"token keyword\">null</span> <span class=\"token comment\">// look again ma, null query text!</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>The id is an md5 hash of the query text, generated by the <a href=\"https://github.com/yusinto/relay-compiler-plus/blob/master/src/compiler/main.js\" target=\"_blank\" rel=\"nofollow\">persistQuery</a>\nfunction. It looks like this:</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-jsx line-numbers\"><code class=\"language-jsx\"> <span class=\"token keyword\">function</span> <span class=\"token function\">persistQuery</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">operationText<span class=\"token punctuation\">:</span> string</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> Promise<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>string</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\"> </span><span class=\"token punctuation\">{</span>\n   <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Promise</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">resolve</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n     <span class=\"token keyword\">const</span> queryId <span class=\"token operator\">=</span> <span class=\"token function\">md5</span><span class=\"token punctuation\">(</span>operationText<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n     \n     <span class=\"token comment\">// queryCache is written to disk at the end as queryMap.json</span>\n     queryCache<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>id<span class=\"token punctuation\">:</span> queryId<span class=\"token punctuation\">,</span> text<span class=\"token punctuation\">:</span> operationText<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n     <span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span>queryId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n <span class=\"token punctuation\">}</span><span class=\"token plain-text\">   </span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>As you can see above, the hash to query text mapping is saved to an array which gets written to disk\nat the end of the compilation as queryMap.json. This is used on the server side as outlined in\n<a href=\"#step-3-map-query-ids-on-the-server\">step 3</a>.</p>\n<h2 id=\"conclusion\"><a href=\"#conclusion\" aria-label=\"conclusion permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Conclusion</h2>\n<p>You can find the package at <a href=\"https://github.com/yusinto/relay-compiler-plus\" target=\"_blank\" rel=\"nofollow\">github</a> with a fully working\n<a href=\"https://github.com/yusinto/relay-compiler-plus/tree/master/example\" target=\"_blank\" rel=\"nofollow\">example</a>. </p>\n<p>Let me know if this is useful (or not)! </p>\n<hr>","timeToRead":4,"frontmatter":{"date":"November 12, 2017","path":"/relay-modern-persisted-queries","title":"Relay Modern Persisted Queries","files":null,"tags":["relay","modern","persisted","queries","graphql","javascript","js"]}}},"pageContext":{"isCreatedByStatefulCreatePages":false}}}