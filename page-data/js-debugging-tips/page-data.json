{"componentChunkName":"component---src-pages-post-template-js","path":"/js-debugging-tips","result":{"data":{"site":{"siteMetadata":{"blurb":"Frontend Engineer @ LaunchDarkly. Book addict and tea lover. Passionate about react graphql and making things simple and fast."}},"markdownRemark":{"html":"<p>Last week whilst investigating a production issue I discovered the following two priceless debugging techniques on\nchrome dev tools. These eventually helped me solve the bug so I'm sharing them here now. Hopefully these will be useful\nto others.</p>\n<p align=\"center\">\n<img src=\"/static/js-debugging-tips-e26131a96057ea998fe311d2ded13316.png\" id=\"markdownImage\"/>\n</p>\n<h2 id=\"console-log-without-code-change\"><a href=\"#console-log-without-code-change\" aria-label=\"console log without code change permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Console log without code change</h2>\n<p>You can console log without changing the source code! This means you can even console log production code\nor any code for that matter accessible via dev tools:</p>\n<ol>\n<li>Right click on the line number you want to console log.</li>\n<li>Add logpoint.</li>\n<li>Enter the string you want to log in this format: <code class=\"language-text\">&#39;Input value is:&#39;, input</code>.</li>\n</ol>\n<p><div class=\"gatsby-resp-iframe-wrapper\" style=\"padding-bottom: 56.49999999999999%; position: relative; height: 0; overflow: hidden; \" > <div class=\"embedVideo-container\"> <iframe src=\"https://www.youtube.com/embed/YOkftPOzJpU?rel=0\" class=\"embedVideo-iframe\" style=\"border:0; position: absolute; top: 0; left: 0; width: 100%; height: 100%; \" allowfullscreen></iframe> </div> </div></p>\n<h2 id=\"conditional-breakpoint\"><a href=\"#conditional-breakpoint\" aria-label=\"conditional breakpoint permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Conditional breakpoint</h2>\n<p>You can add a condition to a breakpoint so the debugger only kicks in when the condition is met. This saves you from\nhaving to repeatedly click the resume button only to miss the actual problematic case because of the mad clicking:</p>\n<ol>\n<li>Right click on the line number you want to break on.</li>\n<li>Add conditional breakpoint.</li>\n<li>Enter a boolean expression on which you want the debugger to break. For example: <code class=\"language-text\">blurbShort.startsWith(&#39;Frontend&#39;)</code>.</li>\n</ol>\n<p><div class=\"gatsby-resp-iframe-wrapper\" style=\"padding-bottom: 56.49999999999999%; position: relative; height: 0; overflow: hidden; \" > <div class=\"embedVideo-container\"> <iframe src=\"https://www.youtube.com/embed/8kQblnwPE0Y?rel=0\" class=\"embedVideo-iframe\" style=\"border:0; position: absolute; top: 0; left: 0; width: 100%; height: 100%; \" allowfullscreen></iframe> </div> </div></p>\n<p>Hope that helps. Till next time!</p>\n<hr>","timeToRead":1,"frontmatter":{"date":"September 11, 2020","path":"/js-debugging-tips","title":"Javascript debugging tips","files":[{"name":"hero","publicURL":"/static/hero-294d19a85ac5b6175a98b26490ad9148.png"},{"name":"js-debugging-tips","publicURL":"/static/js-debugging-tips-e26131a96057ea998fe311d2ded13316.png"}],"tags":["debug","tips","js","chrome","dev","tools","react","typescript","javascript","conditional","breakpoint","console","log","production"]}}},"pageContext":{"isCreatedByStatefulCreatePages":false}}}