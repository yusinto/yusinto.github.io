{"version":3,"sources":["webpack:///./src/pages/index.js"],"names":["Content","Object","styled_components__WEBPACK_IMPORTED_MODULE_5__","b","withConfig","displayName","_utils_sc_utils__WEBPACK_IMPORTED_MODULE_6__","a","PostTile","StyledGatsbyLink","_ref","className","to","children","react__WEBPACK_IMPORTED_MODULE_3___default","createElement","gatsby__WEBPACK_IMPORTED_MODULE_4__","Link","PostHero","props","src","PostDescription","Title","Summary","__webpack_exports__","default","_ref2","posts","data","allMarkdownRemark","edges","_components_layout__WEBPACK_IMPORTED_MODULE_7__","pageType","map","p","_p$node","node","excerpt","timeToRead","_p$node$frontmatter","frontmatter","title","date","path","files","hero","find","f","name","key","publicURL","_components_dateReadTime__WEBPACK_IMPORTED_MODULE_8__","indexQuery"],"mappings":"6NAOMA,EAAUC,OAAAC,EAAAC,EAAAF,CAAM,OAAAG,YAATC,YAAA,kBAAGJ,EAAH,OACTK,EAAAC,GAEEC,EAAWP,OAAAC,EAAAC,EAAAF,CAAM,WAAAG,YAATC,YAAA,mBAAGJ,EAAH,iGASRQ,EAAmBR,OAAAC,EAAAC,EAAAF,CAHN,SAAAS,GAAA,IAAEC,EAAFD,EAAEC,UAAWC,EAAbF,EAAaE,GAAIC,EAAjBH,EAAiBG,SAAjB,OACjBC,EAAAP,EAAAQ,cAACC,EAAAC,MAAKN,UAAWA,EAAWC,GAAIA,GAAKC,KAEjBT,YAAAC,YAAA,2BAAGJ,EAAH,6DAQhBiB,EAAWjB,OAAAC,EAAAC,EAAAF,CAAM,OAAAG,YAATC,YAAA,mBAAGJ,EAAH,qLAGa,SAAAkB,GAAK,OAAIA,EAAMC,MAUpCC,EAAkBpB,OAAAC,EAAAC,EAAAF,CAAM,OAAAG,YAATC,YAAA,0BAAGJ,EAAH,iBAGfqB,EAAQrB,OAAAC,EAAAC,EAAAF,CAAM,MAAAG,YAATC,YAAA,gBAAGJ,EAAH,6DAOLsB,EAAUtB,OAAAC,EAAAC,EAAAF,CAAM,OAAAG,YAATC,YAAA,kBAAGJ,EAAH,uCAIbuB,EAAAC,QAAA,SAAeC,GAAY,IACnBC,EADmBD,EAAVE,KACIC,kBAAkBC,MAErC,OACEhB,EAAAP,EAAAQ,cAACgB,EAAAxB,GAAOyB,SAAS,QACflB,EAAAP,EAAAQ,cAACf,EAAD,KACEc,EAAAP,EAAAQ,cAAA,oBAEEY,EAAMM,IAAI,SAAAC,GAAK,IAAAC,EAC0DD,EAAEE,KAAlEC,EADMF,EACNE,QAASC,EADHH,EACGG,WADHC,EAAAJ,EACeK,YAAcC,EAD7BF,EAC6BE,MAAOC,EADpCH,EACoCG,KAAMC,EAD1CJ,EAC0CI,KAAMC,EADhDL,EACgDK,MACvDC,EAAOD,GAASA,EAAME,KAAK,SAAAC,GAAC,MAAe,SAAXA,EAAEC,OAExC,OACElC,EAAAP,EAAAQ,cAACP,GAASyC,IAAKN,GACb7B,EAAAP,EAAAQ,cAACN,GAAiBG,GAAI+B,GACnBE,EAAO/B,EAAAP,EAAAQ,cAACG,GAASE,IAAKyB,EAAKK,YAAe,KAC3CpC,EAAAP,EAAAQ,cAACM,EAAD,KACEP,EAAAP,EAAAQ,cAACO,EAAD,KACGmB,GAEH3B,EAAAP,EAAAQ,cAACQ,EAAD,KAAUc,GACVvB,EAAAP,EAAAQ,cAACoC,EAAA5C,GAAamC,KAAMA,EAAMJ,WAAYA,YAYnD,IAAMc,EAAU","file":"component---src-pages-index-js-44b7134839d7200aef04.js","sourcesContent":["import React from 'react'\nimport {graphql, Link} from 'gatsby'\nimport styled from 'styled-components'\nimport {ContentStyles} from '../utils/sc-utils'\nimport Layout from '../components/layout';\nimport DateReadTime from '../components/dateReadTime'\n\nconst Content = styled.div`\n  ${ContentStyles}\n`\nconst PostTile = styled.section`\n  margin: 20px 0 30px;\n  padding: 15px 15px;\n  box-shadow: 0 1px 4px rgba(0, 0, 0, 0.3);\n  border-radius: 5px;\n`\nconst GatsbyLink = ({className, to, children}) => (\n  <Link className={className} to={to}>{children}</Link>\n);\nconst StyledGatsbyLink = styled(GatsbyLink)`{\n  display: flex;\n  flex-direction: column;\n  \n  &:hover {\n    opacity: 1;\n  }\n}`\nconst PostHero = styled.div`\n  width: 100%;\n  height: 120px;\n  background-image: url('${props => props.src}');\n  margin: 10px 0 20px;\n  background-position: 50% 50%;\n  background-size: cover;\n  border-radius: 3px;\n  \n  @media(min-width: 690px) {\n    height: 200px;\n  }\n`\nconst PostDescription = styled.div`\n  color: black;\n`\nconst Title = styled.h3`\n  margin: 0 0 10px;\n  \n  @media(min-width: 690px) {\n    font-size: 28px;\n  }\n`\nconst Summary = styled.div`\n  margin: 10px 0 20px;\n  font-size: 16px;\n`\nexport default ({data}) => {\n  const posts = data.allMarkdownRemark.edges;\n\n  return (\n    <Layout pageType=\"home\">\n      <Content>\n        <h4>Latest</h4>\n        {\n          posts.map(p => {\n            const {excerpt, timeToRead, frontmatter: {title, date, path, files}} = p.node;\n            const hero = files && files.find(f => f.name === 'hero');\n\n            return (\n              <PostTile key={path}>\n                <StyledGatsbyLink to={path}>\n                  {hero ? <PostHero src={hero.publicURL}/> : null}\n                  <PostDescription>\n                    <Title>\n                      {title}\n                    </Title>\n                    <Summary>{excerpt}</Summary>\n                    <DateReadTime date={date} timeToRead={timeToRead}/>\n                  </PostDescription>\n                </StyledGatsbyLink>\n              </PostTile>\n            );\n          })\n        }\n      </Content>\n    </Layout>\n  );\n};\n\nexport const indexQuery = graphql`\n    query allPosts {\n        allMarkdownRemark(\n            sort: { order: DESC, fields: [frontmatter___date] }\n#            limit: 30\n            filter: {frontmatter: {published: {eq: true}}}\n        ) {\n            edges {\n                node {\n                    excerpt\n                    timeToRead\n                    frontmatter {\n                        date(formatString: \"MMMM DD, YYYY\")\n                        path\n                        title\n                        files {\n                            name\n                            publicURL\n                        }\n                    }\n                }\n            }\n        }\n    }\n`\n"],"sourceRoot":""}