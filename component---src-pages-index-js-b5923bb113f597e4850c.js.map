{"version":3,"sources":["webpack:///./src/components/authorBioHomepage.js","webpack:///./src/pages/index.js","webpack:///./src/utils/sc-utils.js","webpack:///./src/images/icon-512x512.png"],"names":["ProfilePic","Object","styled_components_browser_esm","b","withConfig","displayName","icon_512x512_default","a","Bio","Name","Blurb","RootDiv","sc_utils","authorBioHomepage","_ref","blurb","react_default","createElement","Content","PostTile","StyledGatsbyLink","className","to","children","gatsby_browser_entry","Link","PostHero","props","src","PostDescription","Title","Summary","indexQuery","__webpack_exports__","default","_ref2","data","posts","allMarkdownRemark","edges","site","siteMetadata","layout","map","p","_p$node","node","excerpt","timeToRead","_p$node$frontmatter","frontmatter","title","date","path","files","hero","find","f","name","key","publicURL","dateReadTime","167","e","t","__webpack_require__","d","ContentStyles","styled_components__WEBPACK_IMPORTED_MODULE_0__","172","module","exports"],"mappings":"sMAKMA,EAAaC,OAAAC,EAAAC,EAAAF,CAAM,OAAAG,YAATC,YAAA,iCAAGJ,EAAH,qMAEWK,EAAAC,GAYrBC,EAAMP,OAAAC,EAAAC,EAAAF,CAAM,OAAAG,YAATC,YAAA,0BAAGJ,EAAH,0GASHQ,EAAOR,OAAAC,EAAAC,EAAAF,CAAM,OAAAG,YAATC,YAAA,2BAAGJ,EAAH,+CAKJS,EAAQT,OAAAC,EAAAC,EAAAF,CAAM,OAAAG,YAATC,YAAA,4BAAGJ,EAAH,gCAILU,EAAUV,OAAAC,EAAAC,EAAAF,CAAM,OAAAG,YAATC,YAAA,8BAAGJ,EAAH,2PAMTW,EAAAL,GAUWM,EAAA,SAAAC,GAAA,IAAEC,EAAFD,EAAEC,MAAF,OACXC,EAAAT,EAAAU,cAACN,EAAD,KACEK,EAAAT,EAAAU,cAACjB,EAAD,MACAgB,EAAAT,EAAAU,cAACT,EAAD,KACEQ,EAAAT,EAAAU,cAACR,EAAD,yBACAO,EAAAT,EAAAU,cAACP,EAAD,KAAQK,+CClDhB,IAAMG,EAAUjB,OAAAC,EAAAC,EAAAF,CAAM,OAAAG,YAATC,YAAA,kBAAGJ,EAAH,OACTW,EAAAL,GAEEY,EAAWlB,OAAAC,EAAAC,EAAAF,CAAM,WAAAG,YAATC,YAAA,mBAAGJ,EAAH,iGASRmB,EAAmBnB,OAAAC,EAAAC,EAAAF,CAHN,SAAAa,GAAA,IAAEO,EAAFP,EAAEO,UAAWC,EAAbR,EAAaQ,GAAIC,EAAjBT,EAAiBS,SAAjB,OACjBP,EAAAT,EAAAU,cAACO,EAAAC,MAAKJ,UAAWA,EAAWC,GAAIA,GAAKC,KAEjBnB,YAAAC,YAAA,2BAAGJ,EAAH,6DAQhByB,EAAWzB,OAAAC,EAAAC,EAAAF,CAAM,OAAAG,YAATC,YAAA,mBAAGJ,EAAH,qLAGa,SAAA0B,GAAK,OAAIA,EAAMC,MAUpCC,EAAkB5B,OAAAC,EAAAC,EAAAF,CAAM,OAAAG,YAATC,YAAA,0BAAGJ,EAAH,iBAGf6B,EAAQ7B,OAAAC,EAAAC,EAAAF,CAAM,MAAAG,YAATC,YAAA,gBAAGJ,EAAH,6DAOL8B,EAAU9B,OAAAC,EAAAC,EAAAF,CAAM,OAAAG,YAATC,YAAA,kBAAGJ,EAAH,uCAsCA+B,GAlCbC,EAAAC,QAAA,SAAeC,GAAY,IAAVC,EAAUD,EAAVC,KACmBC,EAAyCD,EAApEE,kBAAoBC,MAAqCxB,EAAWqB,EAAjCI,KAAOC,aAAe1B,MAEhE,OACEC,EAAAT,EAAAU,cAACyB,EAAAnC,EAAD,KACES,EAAAT,EAAAU,cAACJ,GAAkBE,MAAOA,IAC1BC,EAAAT,EAAAU,cAACC,EAAD,KACEF,EAAAT,EAAAU,cAAA,oBAEEoB,EAAMM,IAAI,SAAAC,GAAK,IAAAC,EAC0DD,EAAEE,KAAlEC,EADMF,EACNE,QAASC,EADHH,EACGG,WADHC,EAAAJ,EACeK,YAAcC,EAD7BF,EAC6BE,MAAOC,EADpCH,EACoCG,KAAMC,EAD1CJ,EAC0CI,KAAMC,EADhDL,EACgDK,MACvDC,EAAOD,GAASA,EAAME,KAAK,SAAAC,GAAC,MAAe,SAAXA,EAAEC,OAExC,OACE1C,EAAAT,EAAAU,cAACE,GAASwC,IAAKN,GACbrC,EAAAT,EAAAU,cAACG,GAAiBE,GAAI+B,GACnBE,EAAOvC,EAAAT,EAAAU,cAACS,GAASE,IAAK2B,EAAKK,YAAe,KAC3C5C,EAAAT,EAAAU,cAACY,EAAD,KACEb,EAAAT,EAAAU,cAACa,EAAD,KACGqB,GAEHnC,EAAAT,EAAAU,cAACc,EAAD,KAAUgB,GACV/B,EAAAT,EAAAU,cAAC4C,EAAAtD,GAAa6C,KAAMA,EAAMJ,WAAYA,YAYnC,eAAAc,IAAA,SAAAC,EAAAC,EAAAzD,GAAA,aCzFvB0D,EAAAC,EAAAjC,EAAA,sBAAAkC,IAAA,IAAAC,EAAAH,EAAA,KAEaE,EAAgBlE,OAAAmE,EAAA7D,EAAAN,EAAH,mDAAAoE,IAAA,SAAAN,EAAAC,EAAAzD,GCF1B+D,EAAAC,QAAiBN,EAAArB,EAAuB","file":"component---src-pages-index-js-b5923bb113f597e4850c.js","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\nimport {ContentStyles} from '../utils/sc-utils'\nimport profilePic from '../../src/images/icon-512x512.png'\n\nconst ProfilePic = styled.div`\n  border-radius: 50%;\n  background-image: url('${profilePic}');\n  background-position: center top;\n  background-size: cover;\n  height: 80px;\n  width: 80px;\n    \n  @media(min-width: 552px) {\n    grid-area: profilePic;\n    height: 120px;\n    width: 120px;\n  }  \n`\nconst Bio = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  \n  @media(min-width: 552px) {\n    grid-area: bio;\n  }\n`\nconst Name = styled.div`\n  font-size: 24px;\n  font-weight: bold;\n  opacity: 1;\n`\nconst Blurb = styled.div`\n font-size: 15px;\n opacity: 0.8;\n`\nconst RootDiv = styled.div`\n  display: grid;\n  grid-template-columns: auto;\n  grid-template-rows: 100px auto;\n  grid-column-gap: 5px;\n  align-items: center;\n  ${ContentStyles}\n  margin-top: 20px;\n  \n  @media(min-width: 552px) {\n    grid-template-columns: auto auto;\n    grid-template-rows: auto;\n    grid-template-areas: \"bio profilePic\";\n  }\n`\n\nexport default ({blurb}) => (\n    <RootDiv>\n      <ProfilePic/>\n      <Bio>\n        <Name>Yusinto Ngadiman</Name>\n        <Blurb>{blurb}</Blurb>\n      </Bio>\n    </RootDiv>\n)\n","import React from 'react'\nimport {graphql, Link} from 'gatsby'\nimport styled from 'styled-components'\nimport {ContentStyles} from '../utils/sc-utils'\nimport Layout from '../components/layout';\nimport DateReadTime from '../components/dateReadTime'\nimport AuthorBioHomepage from '../components/authorBioHomepage'\n\nconst Content = styled.div`\n  ${ContentStyles}\n`\nconst PostTile = styled.section`\n  margin: 20px 0 30px;\n  padding: 15px 15px;\n  box-shadow: 0 1px 4px rgba(0, 0, 0, 0.3);\n  border-radius: 5px;\n`\nconst GatsbyLink = ({className, to, children}) => (\n  <Link className={className} to={to}>{children}</Link>\n);\nconst StyledGatsbyLink = styled(GatsbyLink)`{\n  display: flex;\n  flex-direction: column;\n  \n  &:hover {\n    opacity: 1;\n  }\n}`\nconst PostHero = styled.div`\n  width: 100%;\n  height: 120px;\n  background-image: url('${props => props.src}');\n  margin: 10px 0 20px;\n  background-position: 50% 50%;\n  background-size: cover;\n  border-radius: 3px;\n  \n  @media(min-width: 690px) {\n    height: 200px;\n  }\n`\nconst PostDescription = styled.div`\n  color: black;\n`\nconst Title = styled.h3`\n  margin: 0 0 10px;\n  \n  @media(min-width: 690px) {\n    font-size: 28px;\n  }\n`\nconst Summary = styled.div`\n  margin: 10px 0 20px;\n  font-size: 16px;\n`\nexport default ({data}) => {\n  const {allMarkdownRemark: {edges: posts}, site: {siteMetadata: {blurb}}} = data;\n\n  return (\n    <Layout>\n      <AuthorBioHomepage blurb={blurb}/>\n      <Content>\n        <h4>Latest</h4>\n        {\n          posts.map(p => {\n            const {excerpt, timeToRead, frontmatter: {title, date, path, files}} = p.node;\n            const hero = files && files.find(f => f.name === 'hero');\n\n            return (\n              <PostTile key={path}>\n                <StyledGatsbyLink to={path}>\n                  {hero ? <PostHero src={hero.publicURL}/> : null}\n                  <PostDescription>\n                    <Title>\n                      {title}\n                    </Title>\n                    <Summary>{excerpt}</Summary>\n                    <DateReadTime date={date} timeToRead={timeToRead}/>\n                  </PostDescription>\n                </StyledGatsbyLink>\n              </PostTile>\n            );\n          })\n        }\n      </Content>\n    </Layout>\n  );\n};\n\nexport const indexQuery = graphql`\n    query allPosts {\n        site {\n          siteMetadata {\n            blurb\n          }\n        }\n        allMarkdownRemark(\n            sort: { order: DESC, fields: [frontmatter___date] }\n#            limit: 30\n            filter: {frontmatter: {published: {eq: true}}}\n        ) {\n            edges {\n                node {\n                    excerpt\n                    timeToRead\n                    frontmatter {\n                        date(formatString: \"MMMM DD, YYYY\")\n                        path\n                        title\n                        files {\n                            name\n                            publicURL\n                        }\n                    }\n                }\n            }\n        }\n    }\n`\n","import {css} from 'styled-components'\n\nexport const ContentStyles = css`\n  margin: 0 auto;\n  max-width: 740px;\n  padding: 0 20px;\n`","module.exports = __webpack_public_path__ + \"static/icon-512x512-fe7d1fb00f5ab5cc590685767bd2310d.png\";"],"sourceRoot":""}