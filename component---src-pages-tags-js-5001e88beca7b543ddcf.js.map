{"version":3,"sources":["webpack:///./src/pages/tags.js"],"names":["__webpack_require__","r","__webpack_exports__","d","pageQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_2__","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","gatsby__WEBPACK_IMPORTED_MODULE_3__","TagsPage","_ref","_ref$data","data","group","allMarkdownRemark","title","site","siteMetadata","a","createElement","map","tag","key","fieldValue","to","totalCount","propTypes","PropTypes","shape","arrayOf","string","isRequired","number"],"mappings":"0FAAAA,EAAAC,EAAAC,GAAAF,EAAAG,EAAAD,EAAA,8BAAAE,IAAA,IAAAC,EAAAL,EAAA,GAAAM,EAAAN,EAAAO,EAAAF,GAAAG,EAAAR,EAAA,GAAAS,EAAAT,EAAAO,EAAAC,GAAAE,EAAAV,EAAA,KAAAW,EAAAX,EAAAO,EAAAG,GAAAE,EAAAZ,EAAA,IAOMa,EAAW,SAAAC,GAAA,IAAAC,EAAAD,EACGE,KACuBC,EAF1BF,EAEKG,kBAAqBD,MAEHE,EAJvBJ,EAGKK,KACEC,aAAgBF,MAJvB,OAQfb,EAAAgB,EAAAC,cAAA,WACEjB,EAAAgB,EAAAC,cAACZ,EAAAW,EAAD,CAAQH,MAAOA,IACfb,EAAAgB,EAAAC,cAAA,WACEjB,EAAAgB,EAAAC,cAAA,kBACAjB,EAAAgB,EAAAC,cAAA,UACGN,EAAMO,IAAI,SAAAC,GAAG,OACZnB,EAAAgB,EAAAC,cAAA,MAAIG,IAAKD,EAAIE,YACXrB,EAAAgB,EAAAC,cAACX,EAAA,KAAD,CAAMgB,GAAE,SAAWH,EAAIE,WAAf,KACLF,EAAIE,WADP,KACqBF,EAAII,WADzB,YAUZhB,EAASiB,UAAY,CACnBd,KAAMe,IAAUC,MAAM,CACpBd,kBAAmBa,IAAUC,MAAM,CACjCf,MAAOc,IAAUE,QACfF,IAAUC,MAAM,CACdL,WAAYI,IAAUG,OAAOC,WAC7BN,WAAYE,IAAUK,OAAOD,aAC5BA,cAGPf,KAAMW,IAAUC,MAAM,CACpBX,aAAcU,IAAUC,MAAM,CAC5Bb,MAAOY,IAAUG,OAAOC,kBAMjBtB,YAER,IAAMT,EAAS","file":"component---src-pages-tags-js-5001e88beca7b543ddcf.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\n\n// Components\nimport Helmet from 'react-helmet'\nimport { Link, graphql } from 'gatsby'\n\nconst TagsPage = ({\n                    data: {\n                      allMarkdownRemark: { group },\n                      site: {\n                        siteMetadata: { title },\n                      },\n                    },\n                  }) => (\n  <div>\n    <Helmet title={title} />\n    <div>\n      <h1>Tags</h1>\n      <ul>\n        {group.map(tag => (\n          <li key={tag.fieldValue}>\n            <Link to={`/tags/${tag.fieldValue}/`}>\n              {tag.fieldValue} ({tag.totalCount})\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </div>\n  </div>\n)\n\nTagsPage.propTypes = {\n  data: PropTypes.shape({\n    allMarkdownRemark: PropTypes.shape({\n      group: PropTypes.arrayOf(\n        PropTypes.shape({\n          fieldValue: PropTypes.string.isRequired,\n          totalCount: PropTypes.number.isRequired,\n        }).isRequired\n      ),\n    }),\n    site: PropTypes.shape({\n      siteMetadata: PropTypes.shape({\n        title: PropTypes.string.isRequired,\n      }),\n    }),\n  }),\n}\n\nexport default TagsPage\n\nexport const pageQuery = graphql`\n    query {\n        site {\n            siteMetadata {\n                title\n            }\n        }\n        allMarkdownRemark(\n            limit: 2000\n            filter: { frontmatter: { published: { ne: false } } }\n        ) {\n            group(field: frontmatter___tags) {\n                fieldValue\n                totalCount\n            }\n        }\n    }\n`"],"sourceRoot":""}