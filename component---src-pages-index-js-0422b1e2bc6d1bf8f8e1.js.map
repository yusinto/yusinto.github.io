{"version":3,"sources":["webpack:///./src/images/icon-512x512.png","webpack:///./src/components/authorBioHomepage.js","webpack:///./src/pages/index.js","webpack:///./src/utils/sc-utils.js"],"names":["module","exports","ProfilePic","styled","div","profilePic","Bio","Name","Blurb","RootDiv","ContentStyles","blurb","Content","PostTile","section","StyledGatsbyLink","className","to","children","PostHero","props","src","PostDescription","Title","h3","Summary","indexQuery","data","posts","allMarkdownRemark","edges","site","siteMetadata","map","p","node","excerpt","timeToRead","frontmatter","title","date","path","files","hero","find","f","name","key","publicURL","css"],"mappings":"gFAAAA,EAAOC,QAAU,IAA0B,4D,uKCKrCC,EAAaC,IAAOC,IAAV,+EAAGD,CAAH,sMAEWE,KAYrBC,EAAMH,IAAOC,IAAV,wEAAGD,CAAH,2GASHI,EAAOJ,IAAOC,IAAV,yEAAGD,CAAH,gDAKJK,EAAQL,IAAOC,IAAV,0EAAGD,CAAH,iCAILM,EAAUN,IAAOC,IAAV,4EAAGD,CAAH,4PAMTO,KAUW,kBAAEC,EAAF,EAAEA,MAAF,OACX,kBAACF,EAAD,KACE,kBAACP,EAAD,MACA,kBAACI,EAAD,KACE,kBAACC,EAAD,yBACA,kBAACC,EAAD,KAAQG,M,2CClDhB,IAAMC,EAAUT,IAAOC,IAAV,oEAAGD,CAAH,QACTO,KAEEG,EAAWV,IAAOW,QAAV,qEAAGX,CAAH,kGASRY,EAAmBZ,aAHN,SAAC,GAAD,IAAEa,EAAF,EAAEA,UAAWC,EAAb,EAAaA,GAAIC,EAAjB,EAAiBA,SAAjB,OACjB,kBAAC,OAAD,CAAMF,UAAWA,EAAWC,GAAIA,GAAKC,MAEjB,6EAAGf,CAAH,8DAQhBgB,EAAWhB,IAAOC,IAAV,qEAAGD,CAAH,uLAGa,SAAAiB,GAAK,OAAIA,EAAMC,OAUpCC,EAAkBnB,IAAOC,IAAV,4EAAGD,CAAH,kBAGfoB,EAAQpB,IAAOqB,GAAV,kEAAGrB,CAAH,8DAOLsB,EAAUtB,IAAOC,IAAV,oEAAGD,CAAH,wCAsCAuB,GAlCE,sBAAa,IAAXC,EAAU,EAAVA,KACmBC,EAAyCD,EAApEE,kBAAoBC,MAAqCnB,EAAWgB,EAAjCI,KAAOC,aAAerB,MAEhE,OACE,kBAAC,IAAD,KACE,kBAAC,EAAD,CAAmBA,MAAOA,IAC1B,kBAACC,EAAD,KACE,sCAEEgB,EAAMK,KAAI,SAAAC,GAAM,IAAD,EAC0DA,EAAEC,KAAlEC,EADM,EACNA,QAASC,EADH,EACGA,WADH,IACeC,YAAcC,EAD7B,EAC6BA,MAAOC,EADpC,EACoCA,KAAMC,EAD1C,EAC0CA,KAAMC,EADhD,EACgDA,MACvDC,EAAOD,GAASA,EAAME,MAAK,SAAAC,GAAC,MAAe,SAAXA,EAAEC,QAExC,OACE,kBAACjC,EAAD,CAAUkC,IAAKN,GACb,kBAAC1B,EAAD,CAAkBE,GAAIwB,GACnBE,EAAO,kBAACxB,EAAD,CAAUE,IAAKsB,EAAKK,YAAe,KAC3C,kBAAC1B,EAAD,KACE,kBAACC,EAAD,KACGgB,GAEH,kBAACd,EAAD,KAAUW,GACV,kBAAC,IAAD,CAAcI,KAAMA,EAAMH,WAAYA,aAYnC,e,kCCzFvB,kDAEa3B,EAAgBuC,YAAH","file":"component---src-pages-index-js-0422b1e2bc6d1bf8f8e1.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/icon-512x512-fe7d1fb00f5ab5cc590685767bd2310d.png\";","import React from 'react'\nimport styled from 'styled-components'\nimport {ContentStyles} from '../utils/sc-utils'\nimport profilePic from '../../src/images/icon-512x512.png'\n\nconst ProfilePic = styled.div`\n  border-radius: 50%;\n  background-image: url('${profilePic}');\n  background-position: center top;\n  background-size: cover;\n  height: 80px;\n  width: 80px;\n    \n  @media(min-width: 552px) {\n    grid-area: profilePic;\n    height: 120px;\n    width: 120px;\n  }  \n`\nconst Bio = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  \n  @media(min-width: 552px) {\n    grid-area: bio;\n  }\n`\nconst Name = styled.div`\n  font-size: 24px;\n  font-weight: bold;\n  opacity: 1;\n`\nconst Blurb = styled.div`\n font-size: 15px;\n opacity: 0.8;\n`\nconst RootDiv = styled.div`\n  display: grid;\n  grid-template-columns: auto;\n  grid-template-rows: 100px auto;\n  grid-column-gap: 5px;\n  align-items: center;\n  ${ContentStyles}\n  margin-top: 20px;\n  \n  @media(min-width: 552px) {\n    grid-template-columns: auto auto;\n    grid-template-rows: auto;\n    grid-template-areas: \"bio profilePic\";\n  }\n`\n\nexport default ({blurb}) => (\n    <RootDiv>\n      <ProfilePic/>\n      <Bio>\n        <Name>Yusinto Ngadiman</Name>\n        <Blurb>{blurb}</Blurb>\n      </Bio>\n    </RootDiv>\n)\n","import React from 'react'\nimport {graphql, Link} from 'gatsby'\nimport styled from 'styled-components'\nimport {ContentStyles} from '../utils/sc-utils'\nimport Layout from '../components/layout';\nimport DateReadTime from '../components/dateReadTime'\nimport AuthorBioHomepage from '../components/authorBioHomepage'\n\nconst Content = styled.div`\n  ${ContentStyles}\n`\nconst PostTile = styled.section`\n  margin: 20px 0 30px;\n  padding: 15px 15px;\n  box-shadow: 0 1px 4px rgba(0, 0, 0, 0.3);\n  border-radius: 5px;\n`\nconst GatsbyLink = ({className, to, children}) => (\n  <Link className={className} to={to}>{children}</Link>\n);\nconst StyledGatsbyLink = styled(GatsbyLink)`{\n  display: flex;\n  flex-direction: column;\n  \n  &:hover {\n    opacity: 1;\n  }\n}`\nconst PostHero = styled.div`\n  width: 100%;\n  height: 120px;\n  background-image: url('${props => props.src}');\n  margin: 10px 0 20px;\n  background-position: 50% 50%;\n  background-size: cover;\n  border-radius: 3px;\n  \n  @media(min-width: 690px) {\n    height: 200px;\n  }\n`\nconst PostDescription = styled.div`\n  color: black;\n`\nconst Title = styled.h3`\n  margin: 0 0 10px;\n  \n  @media(min-width: 690px) {\n    font-size: 28px;\n  }\n`\nconst Summary = styled.div`\n  margin: 10px 0 20px;\n  font-size: 16px;\n`\nexport default ({data}) => {\n  const {allMarkdownRemark: {edges: posts}, site: {siteMetadata: {blurb}}} = data;\n\n  return (\n    <Layout>\n      <AuthorBioHomepage blurb={blurb}/>\n      <Content>\n        <h4>Latest</h4>\n        {\n          posts.map(p => {\n            const {excerpt, timeToRead, frontmatter: {title, date, path, files}} = p.node;\n            const hero = files && files.find(f => f.name === 'hero');\n\n            return (\n              <PostTile key={path}>\n                <StyledGatsbyLink to={path}>\n                  {hero ? <PostHero src={hero.publicURL}/> : null}\n                  <PostDescription>\n                    <Title>\n                      {title}\n                    </Title>\n                    <Summary>{excerpt}</Summary>\n                    <DateReadTime date={date} timeToRead={timeToRead}/>\n                  </PostDescription>\n                </StyledGatsbyLink>\n              </PostTile>\n            );\n          })\n        }\n      </Content>\n    </Layout>\n  );\n};\n\nexport const indexQuery = graphql`\n    query allPosts {\n        site {\n          siteMetadata {\n            blurb\n          }\n        }\n        allMarkdownRemark(\n            sort: { order: DESC, fields: [frontmatter___date] }\n#            limit: 30\n            filter: {frontmatter: {published: {eq: true}}}\n        ) {\n            edges {\n                node {\n                    excerpt\n                    timeToRead\n                    frontmatter {\n                        date(formatString: \"MMMM DD, YYYY\")\n                        path\n                        title\n                        files {\n                            name\n                            publicURL\n                        }\n                    }\n                }\n            }\n        }\n    }\n`\n","import {css} from 'styled-components'\n\nexport const ContentStyles = css`\n  margin: 0 auto;\n  max-width: 740px;\n  padding: 0 20px;\n`"],"sourceRoot":""}