{"version":3,"sources":["webpack:///./src/components/tagList.js","webpack:///./src/pages/postTemplate.js"],"names":["List","Object","styled_components_browser_esm","b","withConfig","displayName","ListItem","tagList","_ref","tags","react_default","a","createElement","map","t","key","gatsby_browser_entry","Link","to","Title","Content","sc_utils","Hero","postTemplateQuery","__webpack_exports__","default","markdownRemark","data","_markdownRemark$front","frontmatter","title","date","files","html","timeToRead","hero","find","f","name","layout","datePosted","alt","src","publicURL","dangerouslySetInnerHTML","__html"],"mappings":"oKAIMA,EAAOC,OAAAC,EAAAC,EAAAF,CAAM,MAAAG,YAATC,YAAA,iBAAGJ,EAAH,+GASJK,EAAWL,OAAAC,EAAAC,EAAAF,CAAM,MAAAG,YAATC,YAAA,qBAAGJ,EAAH,6MAsBCM,EAAA,SAAAC,GAAA,IAAEC,EAAFD,EAAEC,KAAF,OACbC,EAAAC,EAAAC,cAACZ,EAAD,KAEIS,EAAKI,IAAI,SAAAC,GACP,OAAOJ,EAAAC,EAAAC,cAACN,GAASS,IAAKD,GAAGJ,EAAAC,EAAAC,cAACI,EAAAC,MAAKC,GAAE,SAAWJ,GAAMA,iEChC1D,IAAMK,EAAQlB,OAAAC,EAAAC,EAAAF,CAAM,MAAAG,YAATC,YAAA,uBAAGJ,EAAH,wCAILmB,EAAUnB,OAAAC,EAAAC,EAAAF,CAAM,OAAAG,YAATC,YAAA,yBAAGJ,EAAH,OACToB,EAAAV,GAEEW,EAAOrB,OAAAC,EAAAC,EAAAF,CAAM,OAAAG,YAATC,YAAA,sBAAGJ,EAAH,kDAyBGsB,GApBbC,EAAAC,QAAA,SAAejB,GAAY,IAClBkB,EADkBlB,EAAVmB,KACRD,eAEP,GAAGA,EAAgB,KAAAE,EACmDF,EAA7DG,YAAcC,EADJF,EACIE,MAAOC,EADXH,EACWG,KAAMtB,EADjBmB,EACiBnB,KAAMuB,EADvBJ,EACuBI,MAAQC,EAAoBP,EAApBO,KAAMC,EAAcR,EAAdQ,WAChDC,EAAOH,GAASA,EAAMI,KAAK,SAAAC,GAAC,MAAe,SAAXA,EAAEC,OAExC,OACE5B,EAAAC,EAAAC,cAAC2B,EAAA5B,GAAO6B,WAAYT,EAAMG,WAAYA,GACpCxB,EAAAC,EAAAC,cAACQ,EAAD,KAASV,EAAAC,EAAAC,cAACO,EAAD,KAAQW,IAChBK,EAAOzB,EAAAC,EAAAC,cAACU,GAAKmB,IAAI,OAAOC,IAAKP,EAAKQ,YAAe,KAClDjC,EAAAC,EAAAC,cAACQ,GAAQwB,yBAA0BC,OAAQZ,KAC3CvB,EAAAC,EAAAC,cAACQ,EAAD,KAASV,EAAAC,EAAAC,cAACL,GAAQE,KAAMA,MAK9B,MAAO,qBAGqB","file":"component---src-pages-post-template-js-1b643269b4b09b7b5a41.js","sourcesContent":["import React from 'react';\nimport styled from 'styled-components'\nimport {Link} from 'gatsby'\n\nconst List = styled.ul`\n  list-style-type: none;\n  margin: 0;\n  padding: 0;\n  letter-spacing: 0;\n  font-size: 15px;\n  font-weight: 400;\n  font-style: normal;\n`\nconst ListItem = styled.li`\n    display: inline-block;\n    border: none;\n    color: rgba(0,0,0,.68);\n    background: rgba(0,0,0,.05);\n    border-radius: 3px;\n    margin: 8px;\n    padding: 0 10px;\n    \n    & a {\n      color: black;\n    }\n    \n    & a:hover {\n      opacity: 1;\n    }\n    \n    &:hover {\n      background: rgba(0,0,0,0.1);\n    }\n`\n\nexport default ({tags}) => (\n  <List>\n    {\n      tags.map(t => {\n        return <ListItem key={t}><Link to={`/tags/${t}`}>{t}</Link></ListItem>\n      })\n    }\n  </List>\n)","import React from 'react'\nimport {graphql} from 'gatsby'\nimport styled from 'styled-components'\nimport Layout from '../components/layout'\nimport TagList from '../components/tagList';\nimport {ContentStyles} from '../utils/sc-utils';\n\nconst Title = styled.h1`\n  margin-top: 20px;\n  margin-bottom: 30px;\n`\nconst Content = styled.div`\n  ${ContentStyles}\n`\nconst Hero = styled.img`\n  width: 100%;\n  max-height: 300px;\n  object-fit: cover;\n`\nexport default ({data}) => {\n  const {markdownRemark} = data;\n\n  if(markdownRemark) {\n    const {frontmatter: {title, date, tags, files}, html, timeToRead} = markdownRemark;\n    const hero = files && files.find(f => f.name === 'hero');\n\n    return (\n      <Layout datePosted={date} timeToRead={timeToRead}>\n        <Content><Title>{title}</Title></Content>\n        {hero ? <Hero alt=\"hero\" src={hero.publicURL}/> : null}\n        <Content dangerouslySetInnerHTML={{__html: html}}/>\n        <Content><TagList tags={tags}/></Content>\n      </Layout>\n    );\n  }\n\n  return 'markdown is null!'\n};\n\nexport const postTemplateQuery = graphql`\n    query postByPath($path: String!) {\n        markdownRemark(frontmatter: { path: { eq: $path } }) {\n            html\n            timeToRead\n            frontmatter {\n                date(formatString: \"MMMM DD, YYYY\")\n                path\n                title\n                files {\n                    name\n                    publicURL\n                }\n                tags\n            }\n        }\n    }\n`;"],"sourceRoot":""}