{"data":{"markdownRemark":{"html":"<p>I came from a .Net background but I realised quickly how powerful and easy node is and I love it. The advent of es6 has\nbridged the gap even further. The introduction of arrow functions, classes and destructuring really make node programming\nthat much more enjoyable and fun.</p>\n<p> Enough of my rant! Let's get to the point. This post is part one of a series of posts about react and the things I\nencountered in the process of learning it. One of the first steps that often get overlooked is how to get es6 to work\nwith node on the server side. To me this is a very important step because I want my app to be in es6 as much as possible.</p>\n<p> Note that this is a very basic example of a node app running es6 without any react elements. In my next post, I will\nadd react. The following posts will gradually include react router, relay, hot module replacement (hmr),\nredux, foundation (sass) and many other goodies!</p>\n<p> But first thing first..</p>\n<hr>\n<h2>Step 1.1: Install babel</h2>\n<p> You'll need to install express, babel-express and babel-preset-es2015:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\">\n      <pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> <span class=\"token function\">install</span> express babel-register babel-preset-es2015 --save</code></pre>\n      </div>\n<p>Where express is the standard web framework for node, babel-register will compile every file that is require'd with babel and\nbabel-preset-es2015 tells babel to transpile es6 code to es5.</p>\n<hr>\n<h2>Step 1.2: Configure babel - add a .babelrc file</h2>\n<p>Create a new file called .babelrc at the root directory of your project. The file contents should look like this:</p>\n<div class=\"gatsby-highlight\" data-language=\"json\">\n      <pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"presets\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"es2015\"</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span></code></pre>\n      </div>\n<p>This configures babel to transpile es6 code to es5.</p>\n<hr>\n<h2>Step 1.3: Configure an entry point in package.json</h2>\n<p>In your package.json, add a scripts/start command which tells npm what to do when you run \"npm start\" in the command line:</p>\n<div class=\"gatsby-highlight\" data-language=\"json\">\n      <pre class=\"language-json\"><code class=\"language-json\">  <span class=\"token property\">\"scripts\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"start\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"node src/server/index.js\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span></code></pre>\n      </div>\n<p>This tells npm to execute src/server/index.js when you run \"npm start\" at your root project folder. In this case, index.js\nis the entry point to your app. The contents of this file should look like this: </p>\n<div class=\"gatsby-highlight\" data-language=\"js\">\n      <pre class=\"language-js\"><code class=\"language-js\"><span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'babel-register'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./server'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n      </div>\n<hr>\n<h2>Step 1.4: Write es6 code</h2>\n<p>The file server.js contains all your es6 code for your app. It should look like this:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\">\n      <pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> Express <span class=\"token keyword\">from</span> <span class=\"token string\">'express'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token constant\">PORT</span> <span class=\"token operator\">=</span> <span class=\"token number\">3000</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> app <span class=\"token operator\">=</span> <span class=\"token function\">Express</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\napp<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>req<span class=\"token punctuation\">,</span> res<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    res<span class=\"token punctuation\">.</span><span class=\"token function\">end</span><span class=\"token punctuation\">(</span><span class=\"token string\">'hello world!'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\napp<span class=\"token punctuation\">.</span><span class=\"token function\">listen</span><span class=\"token punctuation\">(</span><span class=\"token constant\">PORT</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token string\">`Listening at </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token constant\">PORT</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n      </div>\n<p>Here we use import statements in place of the classic require statements, const keyword instead of var,\narrow functions instead of inline function declarations and es6 template strings instead of string concatenations.</p>\n<hr>\n<h2>Step 1.5: Run your app!</h2>\n<p>Run </p>\n<div class=\"gatsby-highlight\" data-language=\"bash\">\n      <pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> start</code></pre>\n      </div>\n<p> at your root directory and browse to localhost:3000 to see the output of your app. Download the complete source code from\n<a href=\"https://github.com/yusinto/reactStep1\" target=\"_blank\" rel=\"nofollow\">github</a>.</p>","timeToRead":2,"frontmatter":{"date":"March 27, 2016","path":"/step-one-to-react-es-6-and-express","title":"Step 1 to React - Using es6 with Express","files":null,"tags":["react","es6","express"]}}},"pageContext":{}}