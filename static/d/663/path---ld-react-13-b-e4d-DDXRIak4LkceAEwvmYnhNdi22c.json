{"data":{"markdownRemark":{"html":"<p>About two years ago I wrote a package <a href=\"https://github.com/yusinto/ld-redux\" target=\"_blank\" rel=\"nofollow\">ld-redux</a>\nwhich allows easy integration of Launch Darkly and react redux apps. That package is still alive and well, but with\nthe introduction of the context api in react 16.3 we can do better.</p>\n<p>Introducing <a href=\"https://github.com/yusinto/ld-react\" target=\"_blank\" rel=\"nofollow\">ld-react</a>, the fastest and easiest way to\nintegrate launch darkly with your react apps. Live subscription works out of the box and you get camelCased keys for a better\ndeveloper experience. Integration is a two step process and best of all no redux! </p>\n<h2>Step 1: Install</h2>\n<p>You need react ^16.4 to use ld-react.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\">\n      <pre class=\"language-bash\"><code class=\"language-bash\">yarn add ld-react</code></pre>\n      </div>\n<h2>Step 2: Wrap your root app withFlagProvider</h2>\n<p>The withFlagProvider hoc initialises an ldClient object on componentDidMount and sets up subscriptions to all flags.\nIt then uses the context api to pass flag values to consumers. </p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\">\n      <pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span>withFlagProvider<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'ld-react'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> Home <span class=\"token keyword\">from</span> <span class=\"token string\">'./home'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">App</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Home</span> <span class=\"token punctuation\">/></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token function\">withFlagProvider</span><span class=\"token punctuation\">(</span>App<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>clientSideId<span class=\"token punctuation\">:</span> <span class=\"token string\">'your-client-side-id'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n      </div>\n<p>You can also pass a user object and options as part of the second parameter in addition to clientSideId. However, they are\nnot mandatory.</p>\n<h2>Step 3: Where you need flags, wrap that component withFlags</h2>\n<p>The withFlags hoc sets up a context consumer which passes flags to the wrapped component. Your flags will then be\navailable as camelCased keys under <code class=\"language-text\">this.props.flags.yourFeatureFlag</code>. </p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\">\n      <pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span>withFlags<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'ld-react'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">Home</span> <span class=\"token operator\">=</span> props <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n   <span class=\"token comment\">// flags are available via props.flags</span>\n   <span class=\"token keyword\">return</span> props<span class=\"token punctuation\">.</span>flags<span class=\"token punctuation\">.</span>devTestFlag <span class=\"token operator\">?</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span>Flag on<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span> <span class=\"token punctuation\">:</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span>Flag off<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token function\">withFlags</span><span class=\"token punctuation\">(</span>Home<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n      </div>\n<p>That's it! For more, check out <a href=\"https://github.com/yusinto/ld-react\" target=\"_blank\" rel=\"nofollow\">github</a>. There is also a fully\nworking spa <a href=\"https://github.com/yusinto/ld-react/tree/master/example\" target=\"_blank\" rel=\"nofollow\">example</a> with react router 4 and\nssr. </p>\n<p>Happy coding!</p>\n<hr>","timeToRead":2,"frontmatter":{"date":"2018-05-30","path":"/ld-react","title":"React integration with Launch Darkly using ld-react","files":[{"name":"hero","publicURL":"/static/hero-96234bdf29c76cb4edbae7a11c7680b7.png"}],"tags":["ld-react","launch","darkly","react","feature","flag","integration","context","api","toggle"]}}},"pageContext":{}}