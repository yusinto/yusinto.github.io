{"data":{"site":{"siteMetadata":{"blurb":"Frontend Engineer @ LaunchDarkly. Book addict and tea lover. Passionate about react graphql and making things fast."}},"markdownRemark":{"html":"<p>There are a few ways you can write hocs with typescript, but this is my preferred way.</p>\n<p>Say you have a hoc called <code class=\"language-text\">withData.js</code> that looks like this:</p>\n<h4 id=\"withdatajs\"><a href=\"#withdatajs\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>withData.js</h4>\n<div class=\"gatsby-highlight\" data-language=\"js\">\n      <pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span>useLaunchDarkly<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'ld-react'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> Home <span class=\"token keyword\">from</span> <span class=\"token string\">'./home'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">App</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span>\n  <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>Home <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span><span class=\"token punctuation\">;</span>\n\n<span class=\"gatsby-highlight-code-line\"><span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token function\">useLaunchDarkly</span><span class=\"token punctuation\">(</span>App<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>clientSideId<span class=\"token punctuation\">:</span> <span class=\"token string\">'client-side-id'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</span></code></pre>\n      </div>\n<p>Note that hooks can only be used inside function components so you'll have to\nexport a function.</p>\n<h4 id=\"homejs\"><a href=\"#homejs\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Home.js</h4>\n<div class=\"gatsby-highlight\" data-language=\"js\">\n      <pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span>useFlags<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'ld-react'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">Home</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n<span class=\"gatsby-highlight-code-line\">   <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>devTestFlag<span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token function\">useFlags</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// look ma! Flags from hooks!</span>\n</span>   <span class=\"token keyword\">return</span> devTestFlag <span class=\"token operator\">?</span> <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>Flag on<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span> <span class=\"token punctuation\">:</span> <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>Flag off<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> Home<span class=\"token punctuation\">;</span></code></pre>\n      </div>\n<p>It's then a single line of code <code class=\"language-text\">useFlags()</code> in a component somewhere to get your flags.\nThat's it! Beautiful concise code. It's actually a lot harder to test these stuff\nthan to use it. I'll write another post about testing hooks soon.</p>\n<p>The old api withFlagProvider and with Flags are still available and will stay supported\nfor backward compatibility.</p>\n<hr>","timeToRead":1,"frontmatter":{"date":"January 13, 2019","path":"/react-hoc-typescript","title":"React HOC Typescript Patterns","files":[{"name":"hero","publicURL":"/static/hero-9a82ec9b4ffe2723ab268d1a724ca495.png"}],"tags":["unit","testing","test","react","hoc","hocs","higher","order","components","jest","typescript","ts","patterns"]}}},"pageContext":{}}