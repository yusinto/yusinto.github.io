{"data":{"markdownRemark":{"html":"<p>I'm writing this onboard of a plane, en route to my holidays in Vietnam. I was fortunate enough to get a business class upgrade (bucket list item\nchecked) which made it possible for me to even think of blogging. </p>\n<p>I didn't know they get real cutlery in business class?! Plus face moisturiser and lip\nbalm?! And that flatbed with built-in massager.. my god I've been missing out all this time. And the food! They get real food! I had pan fried\nbarramundi with steamed vegetables with unlimited hard liquors enough to inspire burnt out devs to start a blog.</p>\n<p>I digressed. I want to talk about development cycles in this post. At work, I use scrum with a 2 week sprint, standups every morning, grooming etc. In my previous\njob, I use the same. There's nothing wrong with this, but with the introduction of new tools like launch darkly (feature toggling), docker and aws ecr, there's\nbeen a bit of a quiet evolution (or should I say revolution?) towards the inevitable: continuous feature driven delivery. </p>\n<p>What does that mean? It means you develop\na feature, test it, and as soon as its ready for production you deploy it. Each feature is treated the same way, so there could be many deployments in a week\nor even in a day. What does this further mean? This means the scrum is dead my friend!</p>\n<h2 id=\"scrum-is-dead-again\"><a href=\"#scrum-is-dead-again\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Scrum is dead.. again?</h2>\n<p>I'm quoting Dave Thomas' infamous blog post \"<a href=\"http://davethomas.org\" target=\"_blank\" rel=\"nofollow\">Agile is dead</a>\". The idea of an x-nightly sprint at the end of which a prod deployment occurs\nis outdated, just as the waterfall model became outdated when agile was introduced. Some elements of the scrum are still useful e.g. standups and grooming, but the\nnotion of an end of sprint delivery is outdated.</p>\n<p>Consider the following code (which you can see in entirety <a href=\"https://github.com/yusinto/test-react/blob/master/src/universal/home/home.js\" target=\"_blank\" rel=\"nofollow\">here</a>):</p>\n<h4 id=\"homejs\"><a href=\"#homejs\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>home.js</h4>\n<div class=\"gatsby-highlight\" data-language=\"jsx\">\n      <pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">import</span> React<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>Component<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span>connect<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react-redux'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">as</span> Actions <span class=\"token keyword\">from</span> <span class=\"token string\">'./homeAction'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// private class</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Home</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>onClickGenerateRandom <span class=\"token operator\">=</span> <span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>onClickGenerateRandom<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">onClickGenerateRandom</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span><span class=\"token function\">generateRandom</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">let</span> homeText <span class=\"token operator\">=</span> <span class=\"token string\">'Click button below to generate a random number!'</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">{</span> homeText <span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span>randomNumber<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>onClickGenerateRandom<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span>\n            Generate random number\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">mapStateToProps</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>state<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> homeState <span class=\"token operator\">=</span> state<span class=\"token punctuation\">.</span>Home<span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n    randomNumber<span class=\"token punctuation\">:</span> homeState<span class=\"token punctuation\">.</span>randomNumber\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token function\">connect</span><span class=\"token punctuation\">(</span>mapStateToProps<span class=\"token punctuation\">,</span> Actions<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>Home<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n      </div>\n<p>The Home class is private and that's what we want to test. It is not exported at all, so we can't access it directly.\nAs mentioned above, the official redux documentation recommends exporting this class, but that breaks encapsulation.\nSo what do we do? Enter <a href=\"https://github.com/speedskater/babel-plugin-rewire\" target=\"_blank\" rel=\"nofollow\">babel-plugin-rewire</a>.</p>\n<h2 id=\"using-rewire\"><a href=\"#using-rewire\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Using rewire</h2>\n<p>You need to install the following npm packages:</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\">\n      <pre class=\"language-jsx\"><code class=\"language-jsx\">yarn add <span class=\"token operator\">--</span>dev jest babel<span class=\"token operator\">-</span>plugin<span class=\"token operator\">-</span>rewire enzyme react<span class=\"token operator\">-</span>addons<span class=\"token operator\">-</span>test<span class=\"token operator\">-</span>utils</code></pre>\n      </div>\n<p>I use <a href=\"https://facebook.github.io/jest/\" target=\"_blank\" rel=\"nofollow\">jest</a> for my test framework and you should too, it kicks butt.\nI also use <a href=\"https://github.com/airbnb/enzyme\" target=\"_blank\" rel=\"nofollow\">enzyme</a> which is a utility library for testing react components.\nEnzyme requires the official <a href=\"https://facebook.github.io/react/docs/test-utils.html\" target=\"_blank\" rel=\"nofollow\">react-addons-test-utils</a> package.</p>\n<p>In your .babelrc, add an \"env\" block to include babel-plugin-rewire when running tests:</p>\n<h4 id=\"babelrc\"><a href=\"#babelrc\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>.babelrc</h4>\n<div class=\"gatsby-highlight\" data-language=\"jsx\">\n      <pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token punctuation\">{</span>\n    <span class=\"token string\">\"presets\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"es2015\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"react\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"stage-0\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    \n    <span class=\"token comment\">/* etc your other config */</span>\n    \n    <span class=\"token string\">\"env\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token string\">\"test\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token string\">\"plugins\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"babel-plugin-rewire\"</span><span class=\"token punctuation\">]</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre>\n      </div>\n<h2 id=\"write-the-tests\"><a href=\"#write-the-tests\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Write the tests!</h2>\n<p>Now we can write the tests! The complete file is <a href=\"https://github.com/yusinto/test-react/blob/master/src/universal/home/home.test.js\" target=\"_blank\" rel=\"nofollow\">here</a>:</p>\n<h4 id=\"hometestjs\"><a href=\"#hometestjs\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>home.test.js</h4>\n<div class=\"gatsby-highlight\" data-language=\"jsx\">\n      <pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span>shallow<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'enzyme'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> HomeRedux <span class=\"token keyword\">from</span> <span class=\"token string\">'./home'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">describe</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Home component tests'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// rewire injects __get__ and __set__ methods to all our modules.</span>\n  <span class=\"token comment\">// These can then be used to extract and set top level private variables.</span>\n  <span class=\"token comment\">// In this instance, we extract the private Home class</span>\n  <span class=\"token keyword\">const</span> Home <span class=\"token operator\">=</span> HomeRedux<span class=\"token punctuation\">.</span><span class=\"token function\">__get__</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Home'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token function\">it</span><span class=\"token punctuation\">(</span><span class=\"token string\">'should render correctly'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// Yayy! We can now render the presentational component directly! </span>\n    <span class=\"token keyword\">const</span> output <span class=\"token operator\">=</span> <span class=\"token function\">shallow</span><span class=\"token punctuation\">(</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Home</span> <span class=\"token attr-name\">randomNumber</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token number\">45</span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">/></span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    \n    <span class=\"token comment\">// Use jest snapshot testing for convenience</span>\n    <span class=\"token function\">expect</span><span class=\"token punctuation\">(</span>output<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toMatchSnapshot</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n      </div>\n<h2 id=\"conclusion\"><a href=\"#conclusion\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Conclusion</h2>\n<p>This approach incurs a little more time to setup, but I think it's worth it. We leave the code fully testable, encapsulation intact.\nThis feels right for me. Also, you can apply the same technique to test react components wrapped in relay containers. It works! </p>\n<p>Check out the <a href=\"https://github.com/yusinto/test-react\" target=\"_blank\" rel=\"nofollow\">sample code</a> for a working example and let me know if this is useful (or not)!</p>\n<hr>","timeToRead":4,"frontmatter":{"date":"March 22, 2017","path":"/feature-driven-development","title":"Feature driven development","files":null,"tags":["feature","flag","driven","development","git","model","agile","scrum","sprint"]}}},"pageContext":{}}