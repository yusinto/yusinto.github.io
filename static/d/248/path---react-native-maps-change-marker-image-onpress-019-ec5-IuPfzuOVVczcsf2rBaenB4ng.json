{"data":{"markdownRemark":{"html":"<p>Recently I started a new pet project which involves maps and markers on ios and android. Of course I started\nthis new project in react native. I was expecting a somewhat challenging times ahead because it has been\na few months since I last did react native development. The landscape has definitely improved, and I feel\nso fortunate to be a javascript developer at this present moment because of awesome tools like react-native\nat our disposal. The possibilities are truly endless.</p>\n<p>Airbnb has open sourced <a href=\"https://github.com/airbnb/react-native-maps\" target=\"_blank\" rel=\"nofollow\">react-native-maps</a> which\nmade it so easy to integrate mapping capabilities with your app. There are steps to follow to set it all up but\nit's not that hard.</p>\n<p>All the code in this blog are available on <a href=\"https://github.com/yusinto/react-native-map-markers\" target=\"_blank\" rel=\"nofollow\">github</a>.</p>\n<h2>The problem</h2>\n<p>Need to display custom map markers on react-native-maps. Then, onPress of a\nmarker, change that marker image so the user can see it has\nbeen selected. The problem is there is no direct way to get the ref of\nthe selected marker. Even if there is, there is no setImage method to\nchange the marker image.</p>\n<h2>The solution</h2>\n<p>Out of the box, there's already an onPress event handler with MapView.Marker\nwhich is a good starting point. We will use this along with the ref and\nimage props (also supported out of the box) to solve our problem.</p>\n<h2>Are you done talking? Show me some code!</h2>\n<p>So first things first, you need to install and link react-native-maps:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\">\n      <pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token comment\"># stick with 0.13.0 to avoid unresolved issues in ^0.14.0</span>\nyarn add react-native-maps@0.13.0</code></pre>\n      </div>\n<p>then link it</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\">\n      <pre class=\"language-bash\"><code class=\"language-bash\">react-native <span class=\"token function\">link</span> react-native-maps</code></pre>\n      </div>\n<p><b>GOTCHA</b> react-native-maps requires babel-plugin-module-resolver as well\notherwise you'll get this error: Unknown plugin module-resolver. This is a bug\nwhich should be fixed in a later version.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\">\n      <pre class=\"language-bash\"><code class=\"language-bash\">yarn add babel-plugin-module-resolver</code></pre>\n      </div>\n<p>Then we can write some code to render a basic map like this:</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\">\n      <pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">import</span> React<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> Component <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span>AppRegistry<span class=\"token punctuation\">,</span> StyleSheet<span class=\"token punctuation\">,</span> View<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react-native'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> MapView <span class=\"token keyword\">from</span> <span class=\"token string\">'react-native-maps'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">MapMarkers</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Component</span> <span class=\"token punctuation\">{</span>\n  state <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    region<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n      latitude<span class=\"token punctuation\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n      longitude<span class=\"token punctuation\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n      latitudeDelta<span class=\"token punctuation\">:</span> <span class=\"token number\">0.0043</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// hardcode zoom levels just for example</span>\n      longitudeDelta<span class=\"token punctuation\">:</span> <span class=\"token number\">0.0034</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token function\">componentDidMount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    navigator<span class=\"token punctuation\">.</span>geolocation<span class=\"token punctuation\">.</span><span class=\"token function\">getCurrentPosition</span><span class=\"token punctuation\">(</span>\n      position <span class=\"token operator\">=></span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n        region<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token operator\">...</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>region<span class=\"token punctuation\">,</span>\n          latitude<span class=\"token punctuation\">:</span> position<span class=\"token punctuation\">.</span>coords<span class=\"token punctuation\">.</span>latitude<span class=\"token punctuation\">,</span>\n          longitude<span class=\"token punctuation\">:</span> position<span class=\"token punctuation\">.</span>coords<span class=\"token punctuation\">.</span>longitude<span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n      error <span class=\"token operator\">=></span> <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n        enableHighAccuracy<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n        timeout<span class=\"token punctuation\">:</span> <span class=\"token number\">20000</span><span class=\"token punctuation\">,</span>\n        maximumAge<span class=\"token punctuation\">:</span> <span class=\"token number\">1000</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token comment\">// note that you need to style the map, otherwise you'll get</span>\n  <span class=\"token comment\">// a blank screen</span>\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>View</span> <span class=\"token attr-name\">style</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>styles<span class=\"token punctuation\">.</span>root<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>MapView</span> <span class=\"token attr-name\">style</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>styles<span class=\"token punctuation\">.</span>map<span class=\"token punctuation\">}</span></span>\n                 <span class=\"token attr-name\">showsUserLocation</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">}</span></span>\n                 <span class=\"token attr-name\">followsUserLocation</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">}</span></span>\n                 <span class=\"token attr-name\">initialRegion</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>region<span class=\"token punctuation\">}</span></span>\n        <span class=\"token punctuation\">/></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>View</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> styles <span class=\"token operator\">=</span> StyleSheet<span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  root<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n    flex<span class=\"token punctuation\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n    justifyContent<span class=\"token punctuation\">:</span> <span class=\"token string\">'center'</span><span class=\"token punctuation\">,</span>\n    alignItems<span class=\"token punctuation\">:</span> <span class=\"token string\">'center'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  map<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n    position<span class=\"token punctuation\">:</span> <span class=\"token string\">'absolute'</span><span class=\"token punctuation\">,</span>\n    top<span class=\"token punctuation\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n    left<span class=\"token punctuation\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n    right<span class=\"token punctuation\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n    bottom<span class=\"token punctuation\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nAppRegistry<span class=\"token punctuation\">.</span><span class=\"token function\">registerComponent</span><span class=\"token punctuation\">(</span><span class=\"token string\">'mapMarkers'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> MapMarkers<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n      </div>\n<h2>iOS Simulator Setup</h2>\n<p>Before you run this in the simulator, you'll need to set a custom location\nin the ios simulator. We'll only be demoing on ios only for this blog.</p>\n<img alt=\"Simulator Location Menu\" src=\"/static/simulator_location_menu-c9a2d11813e71eca98033053a8b6c321.png\" id=\"markdownImage\"/>\n<p>Set the custom location to Cafe Sydney -33.861924, 151.210891. If you haven't\nbeen, you have to! It's an awesome restaurant!</p>\n<img alt=\"Set Custom Location\" src=\"/static/custom_location-32b1fbae2f11a036a16924a9fa724bea.png\" id=\"markdownImage\"/>\n<h2>Run the project</h2>\n<div class=\"gatsby-highlight\" data-language=\"bash\">\n      <pre class=\"language-bash\"><code class=\"language-bash\">react-native run-ios</code></pre>\n      </div>\n<p>You should see a map view with the user location set to Cafe Sydney in Australia.\nNow let's add a few markers.</p>\n<p>{% highlight js%}\n// Add these at the top of the file, straight after the imports\nconst RESTAURANTS = [\n{\nkey: 'Cafe Sydney',\ntitle: 'Cafe Sydney',\ndescription: 'Customs House, 31 Alfred St, Sydney NSW 2000',\nlatLong: {\nlatitude: -33.861924,\nlongitude: 151.210891,\n},\n},\n{\nkey: 'Four Frogs Creperie',\ntitle: 'Four Frogs Creperie',\ndescription: '1 Macquarie Pl, Sydney NSW 2000',\nlatLong: {\nlatitude: -33.861755,\nlongitude: 151.209941,\n},\n},\n{\nkey: 'Tapavino',\ntitle: 'Tapavino',\ndescription: '6 Bulletin Pl, Sydney NSW 2000',\nlatLong: {\nlatitude: -33.862512,\nlongitude: 151.209490,\n},\n},\n];</p>\n<p>  // then modify your render method to look like this\nrender() {\nreturn (\n<View style={styles.root}>\n<MapView style={styles.map}\n                 showsUserLocation={true}\n                 followsUserLocation={true}\n                 initialRegion={this.state.region}\n        >\n{\nRESTAURANTS.map((m, i) =>\n&#x3C;MapView.Marker\ncoordinate={m.latLong}\ntitle={m.title}\ndescription={m.description}\nkey={<code class=\"language-text\">marker-${i}</code>}\n/>\n)\n}\n</MapView>\n</View>\n);\n}</p>\n<div class=\"gatsby-highlight\" data-language=\"text\">\n      <pre class=\"language-text\"><code class=\"language-text\">You should see 3 markers on the map. Now we want to use a custom image \nfor our marker. MapView has an image prop we can set so that&#39;s easy. \nThen onPress of a marker, we want to change this image to a different \none to show the user that it has been selected. Again MapView has an \nonPress prop which we can use to set a custom callback when a marker gets pressed.\n\nHere&#39;s the trick, onpress of a marker, we have to pass the index of the selected\nmarker and save that to state. Then on the image prop, we can inspect\nif the marker being rendered matches the selected index in state, and use\na different image if so.\n\n{% highlight js%}\n// At the top of the file after imports, we require our marker images\nconst marker = require(&#39;./assets/images/marker.png&#39;);\nconst selectedMarker = require(&#39;./assets/images/marker-selected.png&#39;);\n\n// Then in our class\nonPressMarker(e, index) {\n    this.setState({selectedMarkerIndex: index});\n}\n  \n// Then in our render method, we specify onPress and image props.\n// For brevity, I only include the relevant bits of code here\nRESTAURANTS.map((m, i) =&gt;\n  &lt;MapView.Marker\n    coordinate={m.latLong}\n    title={m.title}\n    description={m.description}\n    key={`marker-${i}`}\n    onPress={(e) =&gt; this.onPressMarker(e, i)}\n    image={this.state.selectedMarkerIndex === i ? selectedMarker : marker} // this is the crux of the blog\n  /&gt;\n)</code></pre>\n      </div>\n<p>That's it!</p>\n<h2>Conclusion</h2>\n<p>Check out the <a href=\"https://github.com/yusinto/react-native-map-markers\" target=\"_blank\" rel=\"nofollow\">complete code</a> on\ngithub. Let me know if this helps!</p>\n<hr>","timeToRead":4,"frontmatter":{"date":"April 25, 2017","path":"/react-native-maps-change-marker-image-onpress","title":"Change marker image onPress in react-native-maps","files":[{"name":"simulator_location_menu","publicURL":"/static/simulator_location_menu-c9a2d11813e71eca98033053a8b6c321.png"},{"name":"custom_location","publicURL":"/static/custom_location-32b1fbae2f11a036a16924a9fa724bea.png"}],"tags":["react","native","maps","change","marker","image","onpress"]}}},"pageContext":{}}