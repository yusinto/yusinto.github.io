{"version":3,"sources":["webpack:///./src/components/tagList.js","webpack:///./src/pages/postTemplate.js","webpack:///./src/utils/sc-utils.js","webpack:///./src/images/icon-512x512.png","webpack:///./src/components/header.js","webpack:///./src/constants.js","webpack:///./src/components/authorBio.js","webpack:///./src/components/authorBioHomepage.js","webpack:///./src/components/layout.js","webpack:///./node_modules/core-js/modules/es6.function.name.js"],"names":["List","Object","styled_components_browser_esm","b","withConfig","displayName","ListItem","tagList","_ref","tags","react_default","a","createElement","map","t","key","gatsby_browser_entry","Link","to","Title","Content","sc_utils","Hero","postTemplateQuery","__webpack_exports__","default","markdownRemark","data","_markdownRemark$front","frontmatter","title","date","files","html","timeToRead","hero","find","f","name","layout","datePosted","alt","src","publicURL","dangerouslySetInnerHTML","__html","166","e","__webpack_require__","d","ContentStyles","styled_components__WEBPACK_IMPORTED_MODULE_0__","167","module","exports","p","168","site","siteMetadata","description","keywordsCsv","blurb","169","n","i","r","o","l","c","m","s","u","RootDiv","Logo","SocialLinks","SocialLink","header","href","target","rel","viewBox","className","w","y","v","E","_","k","memoizedEllipsize","memoize_one_esm","length","ellipsize_default","authorBio_RootDiv","Bio","ProfilePic","icon_512x512_default","Name","Blurb","short","_ref2","medium","_ref3","DateReadMinutes","MidDot","authorBio","_ref4","blurbShort","blurbMedium","authorBioHomepage_ProfilePic","authorBioHomepage_Bio","authorBioHomepage_Name","authorBioHomepage_Blurb","authorBioHomepage_RootDiv","authorBioHomepage","_templateObject","layout_RootDiv","layout_Layout","children","pageType","StaticQuery","query","render","_data$site$siteMetada","Fragment","Helmet_default","meta","content","lang","siteTitle","_320066194","propTypes","prop_types_default","node","isRequired","string","Y","171","dP","FProto","Function","prototype","nameRE","configurable","get","this","match"],"mappings":"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","file":"component---src-pages-post-template-js-d255fc109465d408af22.js","sourcesContent":["import React from 'react';\nimport styled from 'styled-components'\nimport {Link} from 'gatsby'\n\nconst List = styled.ul`\n  list-style-type: none;\n  margin: 0;\n  padding: 0;\n  letter-spacing: 0;\n  font-size: 15px;\n  font-weight: 400;\n  font-style: normal;\n`\nconst ListItem = styled.li`\n    display: inline-block;\n    border: none;\n    color: rgba(0,0,0,.68);\n    background: rgba(0,0,0,.05);\n    border-radius: 3px;\n    margin: 8px;\n    padding: 0 10px;\n    \n    & a {\n      color: black;\n    }\n    \n    & a:hover {\n      opacity: 1;\n    }\n    \n    &:hover {\n      background: rgba(0,0,0,0.1);\n    }\n`\n\nexport default ({tags}) => (\n  <List>\n    {\n      tags.map(t => {\n        return <ListItem key={t}><Link to={`/tags/${t}`}>{t}</Link></ListItem>\n      })\n    }\n  </List>\n)","import React from 'react'\nimport {graphql} from 'gatsby'\nimport styled from 'styled-components'\nimport Layout from '../components/layout'\nimport TagList from '../components/tagList';\nimport {ContentStyles} from '../utils/sc-utils';\n\nconst Title = styled.h1`\n  margin-top: 20px;\n  margin-bottom: 30px;\n`\nconst Content = styled.div`\n  ${ContentStyles}\n`\nconst Hero = styled.img`\n  width: 100%;\n  max-height: 300px;\n  object-fit: cover;\n`\nexport default ({data}) => {\n  const {markdownRemark} = data;\n\n  if(markdownRemark) {\n    const {frontmatter: {title, date, tags, files}, html, timeToRead} = markdownRemark;\n    const hero = files && files.find(f => f.name === 'hero');\n\n    return (\n      <Layout datePosted={date} timeToRead={timeToRead}>\n        <Content><Title>{title}</Title></Content>\n        {hero ? <Hero alt=\"hero\" src={hero.publicURL}/> : null}\n        <Content dangerouslySetInnerHTML={{__html: html}}/>\n        <Content><TagList tags={tags}/></Content>\n      </Layout>\n    );\n  }\n\n  return 'markdown is null!'\n};\n\nexport const postTemplateQuery = graphql`\n    query postByPath($path: String!) {\n        markdownRemark(frontmatter: { path: { eq: $path } }) {\n            html\n            timeToRead\n            frontmatter {\n                date(formatString: \"MMMM DD, YYYY\")\n                path\n                title\n                files {\n                    name\n                    publicURL\n                }\n                tags\n            }\n        }\n    }\n`;","import {css} from 'styled-components'\n\nexport const ContentStyles = css`\n  margin: 0 auto;\n  max-width: 740px;\n  padding: 0 20px;\n`","module.exports = __webpack_public_path__ + \"static/icon-512x512-fe7d1fb00f5ab5cc590685767bd2310d.png\";","import React from 'react'\nimport {Link} from 'gatsby'\nimport styled from 'styled-components'\nimport {StickyHeaderHeight} from '../constants'\n\nconst RootDiv = styled.div`\n  position: fixed;\n  top: 0;\n  width: 100%;\n  height: ${StickyHeaderHeight}px;\n  opacity: 0.96;\n  background: white;\n  z-index: 2;\n  display: flex;\n  justify-content: space-between;\n`\nconst Logo = styled.h1`\n  margin: 0;\n  margin-left: 10px;\n  font-size: 25px;\n  font-weight: bold;\n  \n  @media(min-width: 375px) { \n    font-size: 32px;\n  } \n`\nconst SocialLinks = styled.div`\n  display: flex;\n  padding-top: 5px;\n  \n  @media(min-width: 480px) {\n    margin-right: 10px;\n  }\n`\nconst SocialLink = styled.span`\n    width: 18px;\n    margin: 8px 10px;\n    \n    @media(min-width: 375px) { \n      width: 20px;\n      margin: 10px;\n    } \n    \n    @media(min-width: 480px) {\n      margin: 10px 13px;\n    }\n`\nconst Header = () => (\n  <RootDiv>\n    <Logo>\n      <Link to=\"/\">ReactJunkie</Link>\n    </Logo>\n    <SocialLinks>\n      <SocialLink>\n        <a href=\"https://twitter.com/yusinto\" target=\"_blank\" rel=\"noopener noreferrer\">\n          <svg viewBox=\"0 0 1024 1024\">\n            <title>twitter</title>\n            <path className=\"path1\"\n                  d=\"M886.579 319.795c0.41 8.294 0.563 16.691 0.563 24.986 0 255.488-194.406 549.99-549.888 549.99-109.21 0-210.739-32-296.294-86.886 15.155 1.792 30.515 2.714 46.080 2.714 90.624 0 173.926-30.925 240.026-82.688-84.531-1.587-155.955-57.395-180.531-134.195 11.776 2.202 23.91 3.379 36.352 3.379 17.664 0 34.765-2.304 50.944-6.707-88.422-17.818-155.034-95.898-155.034-189.594 0-0.819 0-1.587 0-2.406 26.061 14.49 55.91 23.194 87.552 24.218-51.866-34.714-86.016-93.798-86.016-160.922 0-35.379 9.523-68.608 26.214-97.178 95.283 116.992 237.773 193.894 398.387 201.984-3.277-14.182-4.966-28.877-4.966-44.083 0-106.701 86.477-193.178 193.229-193.178 55.603 0 105.83 23.398 141.107 60.979 43.981-8.704 85.35-24.781 122.726-46.899-14.438 45.107-45.107 82.995-84.992 106.906 39.117-4.71 76.288-15.002 111.002-30.413-25.907 38.81-58.675 72.806-96.461 99.994z\"></path>\n          </svg>\n        </a>\n      </SocialLink>\n      <SocialLink>\n        <a href=\"https://github.com/yusinto\" target=\"_blank\" rel=\"noopener noreferrer\">\n          <svg viewBox=\"0 0 1024 1024\">\n            <title>github</title>\n            <path className=\"path1\"\n                  d=\"M674.816 579.021c-36.762 0-66.56 41.318-66.56 92.109 0 50.893 29.798 92.211 66.56 92.211s66.56-41.318 66.56-92.211c-0.051-50.79-29.798-92.109-66.56-92.109zM906.547 339.251c7.629-18.688 7.936-124.877-32.512-226.611 0 0-92.723 10.189-233.011 106.496-29.44-8.192-79.258-12.186-128.973-12.186-49.818 0-99.584 3.994-129.024 12.186-140.339-96.307-233.062-106.496-233.062-106.496-40.397 101.734-39.987 207.923-32.461 226.611-47.514 51.61-76.544 113.613-76.544 198.195 0 367.923 305.306 373.811 382.31 373.811 17.51 0 52.122 0.102 88.781 0.102 36.608 0 71.27-0.102 88.678-0.102 77.107 0 382.31-5.888 382.31-373.811 0-84.582-28.979-146.586-76.493-198.195zM513.434 866.048h-2.867c-193.075 0-343.501-22.989-343.501-210.688 0-45.005 15.872-86.682 53.606-121.293 62.822-57.702 169.216-27.187 289.894-27.187 0.512 0 1.024 0 1.485 0 0.512 0 0.922 0 1.382 0 120.678 0 227.123-30.515 289.997 27.187 37.632 34.611 53.504 76.288 53.504 121.293 0 187.699-150.374 210.688-343.501 210.688zM349.235 579.021c-36.762 0-66.56 41.318-66.56 92.109 0 50.893 29.798 92.211 66.56 92.211 36.813 0 66.611-41.318 66.611-92.211 0-50.79-29.798-92.109-66.611-92.109z\"></path>\n          </svg>\n        </a>\n      </SocialLink>\n      <SocialLink>\n        <a href=\"mailto:yusinto@gmail.com\">\n          <svg viewBox=\"0 0 1024 1024\">\n            <title>mail</title>\n            <path className=\"path1\"\n                  d=\"M80.589 270.643c24.986 13.414 371.098 199.373 384 206.285s29.594 10.189 46.387 10.189c16.794 0 33.485-3.277 46.387-10.189s359.014-192.87 384-206.285c25.037-13.466 48.691-65.843 2.765-65.843h-866.253c-45.926 0-22.272 52.378 2.714 65.843zM952.986 383.437c-28.416 14.797-378.214 197.069-395.622 206.182s-29.594 10.189-46.387 10.189-28.979-1.075-46.387-10.189-365.21-191.437-393.626-206.234c-19.968-10.445-19.763 1.792-19.763 11.213s0 373.402 0 373.402c0 21.504 28.979 51.2 51.2 51.2h819.2c22.221 0 51.2-29.696 51.2-51.2 0 0 0-363.93 0-373.35s0.205-21.658-19.814-11.213z\"></path>\n          </svg>\n        </a>\n      </SocialLink>\n      <SocialLink>\n        <a href=\"https://www.linkedin.com/in/yusinto\" target=\"_blank\" rel=\"noopener noreferrer\">\n          <svg viewBox=\"0 0 1024 1024\">\n            <title>linkedin</title>\n            <path className=\"path1\"\n                  d=\"M256 153.6c0 54.374-36.352 101.171-102.451 101.171-62.208 0-102.349-44.134-102.349-98.509 0-55.808 38.912-105.062 102.4-105.062s101.171 46.592 102.4 102.4zM51.2 972.8v-665.6h204.8v665.6h-204.8z\"></path>\n            <path className=\"path2\"\n                  d=\"M358.4 534.733c0-79.104-2.611-145.203-5.222-202.291h184.013l9.114 88.218h3.891c25.907-41.523 89.395-102.4 195.686-102.4 129.638 0 226.918 86.784 226.918 273.51v381.030h-204.8v-351.283c0-81.613-31.078-143.872-102.4-143.872-54.374 0-81.613 44.032-95.898 80.333-5.222 13.005-6.502 31.13-6.502 49.306v365.517h-204.8v-438.067z\"></path>\n          </svg>\n        </a>\n      </SocialLink>\n    </SocialLinks>\n  </RootDiv>\n)\n\nexport default Header\n","\nexport const StickyHeaderHeight = 56;","import React from 'react'\nimport styled from 'styled-components'\nimport ellipsize from 'ellipsize'\nimport memoizeOne from 'memoize-one';\nimport {ContentStyles} from '../utils/sc-utils'\nimport profilePic from '../../src/images/icon-512x512.png'\n\nconst ellipsizeBlurb = (blurb, length) => ellipsize(blurb, length);\nconst memoizedEllipsize = memoizeOne(ellipsizeBlurb);\n\nconst RootDiv = styled.div`\n  display: grid;\n  grid-template-columns: 70px auto;\n  grid-template-rows: 100px;\n  grid-column-gap: 5px;\n  align-items: center;\n  ${ContentStyles}\n`\nconst Bio = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  font-size: 13px;\n  opacity: 0.8;\n`\nconst ProfilePic = styled.div`\n  height: 60px;\n  width: 60px;\n  border-radius: 50%;\n  background-image: url('${profilePic}');\n  background-position: center top;\n  background-size: cover;\n`\nconst Name = styled.div`\n  font-weight: bold;\n  opacity: 1;\n`\nconst Blurb = styled.div`\n  &:after {\n    content: '${({short}) => short}';\n    \n    @media(min-width: 380px) {\n      content: '${({medium}) => medium}';\n    }\n    \n    @media(min-width: 503px) {\n      content: '${({blurb}) => blurb}';\n    }\n  }\n`\nconst DateReadMinutes = styled.div`\n  font-size: 11.5px;\n`\nconst MidDot = styled.span`\n  padding: 0 7px;\n  vertical-align: middle;\n`\n\nexport default ({datePosted, timeToRead, blurb}) => {\n  const blurbShort = memoizedEllipsize(blurb, 60);\n  const blurbMedium = memoizedEllipsize(blurb, 80);\n\n  return (\n    <RootDiv>\n      <ProfilePic/>\n      <Bio>\n        <Name>Yusinto Ngadiman</Name>\n        <Blurb blurb={blurb} short={blurbShort} medium={blurbMedium}/>\n        <DateReadMinutes>{datePosted}<MidDot>&middot;</MidDot>{timeToRead} min read</DateReadMinutes>\n      </Bio>\n    </RootDiv>\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport {ContentStyles} from '../utils/sc-utils'\nimport profilePic from '../../src/images/icon-512x512.png'\n\nconst ProfilePic = styled.div`\n  border-radius: 50%;\n  background-image: url('${profilePic}');\n  background-position: center top;\n  background-size: cover;\n  height: 80px;\n  width: 80px;\n    \n  @media(min-width: 552px) {\n    grid-area: profilePic;\n    height: 120px;\n    width: 120px;\n  }  \n`\nconst Bio = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  opacity: 0.8;\n  \n  @media(min-width: 552px) {\n    grid-area: bio;\n  }\n`\nconst Name = styled.div`\n  font-size: 24px;\n  font-weight: bold;\n  opacity: 1;\n`\nconst Blurb = styled.div`\n font-size: 15px;\n`\nconst RootDiv = styled.div`\n  display: grid;\n  grid-template-columns: auto;\n  grid-template-rows: 100px auto;\n  grid-column-gap: 5px;\n  align-items: center;\n  ${ContentStyles}\n  margin-top: 20px;\n  \n  @media(min-width: 552px) {\n    grid-template-columns: auto auto;\n    grid-template-rows: auto;\n    grid-template-areas: \"bio profilePic\";\n  }\n`\n\nexport default ({blurb}) => (\n    <RootDiv>\n      <ProfilePic/>\n      <Bio>\n        <Name>Yusinto Ngadiman</Name>\n        <Blurb>{blurb}</Blurb>\n      </Bio>\n    </RootDiv>\n)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport {StaticQuery, graphql} from 'gatsby'\nimport styled, {injectGlobal} from 'styled-components'\nimport Header from './header'\nimport AuthorBio from './authorBio'\nimport AuthorBioHomepage from './authorBioHomepage'\nimport {StickyHeaderHeight} from '../constants'\n\ninjectGlobal`\n  html {\n    font-family: sans-serif;\n  }\n  \n  h1 {\n    margin-top: 50px;\n  }\n  \n  h2, h3, h4, h5 {\n    margin-top: 50px;\n    margin-bottom: 12px;\n  }\n  \n  body {\n    margin: 0;\n  }\n  \n  a:hover {\n    text-decoration: none;\n    opacity: 0.7;\n  }\n  \n  ul, ol {\n    margin-left: 1.78rem;\n  }\n  \n  .gatsby-highlight {\n    margin-bottom: 30px;\n  }\n  \n  .gatsby-highlight-code-line {\n    background-color: #14161a;\n    display: block;\n    margin-right: -1em;\n    margin-left: -1em;\n    padding-right: 1em;\n    padding-left: 0.75em;\n    border-left: 0.2em solid yellowgreen;\n  }\n  \n  .embedVideoIframe {\n    margin-bottom: 0;\n  }\n  \n  #markdownImage {\n    border: 1px solid #2d2d2d;\n    box-shadow: 6px 7px 5px -1px rgba(0,0,0,0.11);\n    border-radius: 7px;\n  }\n`\n\nconst RootDiv = styled.div`\n  margin: 0 auto;\n  width: 100%;\n  padding: ${StickyHeaderHeight}px 0;\n`\n\nconst Layout = ({children, pageType, datePosted, timeToRead}) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n            description,\n            keywordsCsv,\n            blurb\n          }\n        }\n      }\n    `}\n    render={data => {\n      const {title, description, keywordsCsv, blurb} = data.site.siteMetadata;\n      return (\n        <>\n        <Helmet\n          title={title}\n          meta={[\n            {name: 'description', content: `${description} ${blurb}`},\n            {name: 'keywords', content: keywordsCsv},\n          ]}\n        >\n          <html lang=\"en\"/>\n        </Helmet>\n        <Header siteTitle={data.site.siteMetadata.title}/>\n        <RootDiv>\n          {\n            pageType === 'home' ?\n              <AuthorBioHomepage blurb={blurb}/>\n              :\n              <AuthorBio blurb={blurb} datePosted={datePosted} timeToRead={timeToRead}/>\n          }\n\n          {children}\n        </RootDiv>\n        </>\n      )\n    }}\n  />\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n  datePosted: PropTypes.string,\n}\n\nexport default Layout\n","var dP = require('./_object-dp').f;\nvar FProto = Function.prototype;\nvar nameRE = /^\\s*function ([^ (]*)/;\nvar NAME = 'name';\n\n// 19.2.4.2 name\nNAME in FProto || require('./_descriptors') && dP(FProto, NAME, {\n  configurable: true,\n  get: function () {\n    try {\n      return ('' + this).match(nameRE)[1];\n    } catch (e) {\n      return '';\n    }\n  }\n});\n"],"sourceRoot":""}