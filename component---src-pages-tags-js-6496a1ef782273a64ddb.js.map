{"version":3,"sources":["webpack:///./src/pages/tags.js"],"names":["TagsPage","data","group","allMarkdownRemark","title","site","siteMetadata","map","tag","key","fieldValue","to","totalCount","pageQuery"],"mappings":"2FAAA,2GAkDeA,UA3CE,SAAC,GAAD,QACGC,KACuBC,EAF1B,EAEKC,kBAAqBD,MAEHE,EAJvB,EAGKC,KACEC,aAAgBF,MAJvB,OAQf,6BACE,kBAAC,IAAD,CAAQA,MAAOA,IACf,6BACE,oCACA,4BACGF,EAAMK,KAAI,SAAAC,GAAG,OACZ,wBAAIC,IAAKD,EAAIE,YACX,kBAAC,OAAD,CAAMC,GAAE,SAAWH,EAAIE,WAAf,KACLF,EAAIE,WADP,KACqBF,EAAII,WADzB,aA8BL,IAAMC,EAAS","file":"component---src-pages-tags-js-6496a1ef782273a64ddb.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\n\n// Components\nimport Helmet from 'react-helmet'\nimport { Link, graphql } from 'gatsby'\n\nconst TagsPage = ({\n                    data: {\n                      allMarkdownRemark: { group },\n                      site: {\n                        siteMetadata: { title },\n                      },\n                    },\n                  }) => (\n  <div>\n    <Helmet title={title} />\n    <div>\n      <h1>Tags</h1>\n      <ul>\n        {group.map(tag => (\n          <li key={tag.fieldValue}>\n            <Link to={`/tags/${tag.fieldValue}/`}>\n              {tag.fieldValue} ({tag.totalCount})\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </div>\n  </div>\n)\n\nTagsPage.propTypes = {\n  data: PropTypes.shape({\n    allMarkdownRemark: PropTypes.shape({\n      group: PropTypes.arrayOf(\n        PropTypes.shape({\n          fieldValue: PropTypes.string.isRequired,\n          totalCount: PropTypes.number.isRequired,\n        }).isRequired\n      ),\n    }),\n    site: PropTypes.shape({\n      siteMetadata: PropTypes.shape({\n        title: PropTypes.string.isRequired,\n      }),\n    }),\n  }),\n}\n\nexport default TagsPage\n\nexport const pageQuery = graphql`\n    query {\n        site {\n            siteMetadata {\n                title\n            }\n        }\n        allMarkdownRemark(\n            limit: 2000\n            filter: { frontmatter: { published: { ne: false } } }\n        ) {\n            group(field: frontmatter___tags) {\n                fieldValue\n                totalCount\n            }\n        }\n    }\n`"],"sourceRoot":""}